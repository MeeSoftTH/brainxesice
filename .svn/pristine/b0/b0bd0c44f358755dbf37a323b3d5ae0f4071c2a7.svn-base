//
//  SummaryViewController.swift
//  brainexecise
//
//  Created by Petch Temeeyasen on 5/19/15.
//  Copyright (c) 2015 meesoft. All rights reserved.
//

import WatchKit
import Foundation

protocol ModalRetryDelegate {
    func retryDelegate(gameMode: Int)
}

class SummaryViewController: WKInterfaceController {
    
    var delegate: GameSelectionViewController?
    
    var gameMode: Int = -1
    
    override func awakeWithContext(context: AnyObject?) {
        super.awakeWithContext(context)
        
        if let setting = context as? NSDictionary {
            self.gameMode = setting["gamemode"] as! Int
            
            self.delegate = setting["sender"] as? GameSelectionViewController
            let score = setting["score"] as! Int
            let level = setting["level"] as! Int
            let incorrect = setting["incorrect"] as! Int
            let totalScore = score - (incorrect * level)
            
            let userSetting: NSUserDefaults! = NSUserDefaults(suiteName: "group.brainexecise")
            //var currentHiscore = 10
            var hiscores: [Int] = [10, 10, 10]
            switch gameMode
            {
            case 0 :
                summaryLabel.setText(String(format: "Speed Cal LV %d", level))
                hiscores = userSetting.objectForKey("hiscoresgame1") as! [Int]
                
                break
            case 1 :
                summaryLabel.setText(String(format: "True or False LV %d", level))
                hiscores = userSetting.objectForKey("hiscoresgame2") as! [Int]
                
                break
            case 2 :
                summaryLabel.setText(String(format: "Operators LV %d", level))
                hiscores = userSetting.objectForKey("hiscoresgame3") as! [Int]
                
                break
            default :
                summaryLabel.setText("Summary")
                 // do nothing.
            }
            
            if totalScore > hiscores[0] {
                summaryLabel.setText("Hiscore Break!!")
                hiscores[0] = totalScore
                userSetting.setObject(hiscores, forKey: "hiscoresgame1")
                userSetting.synchronize()
            }
            
            totalScoreLabel.setText(String(format: "%d", totalScore))
            
            scoreLabel.setText(String(format: "%d", score))
            
            incorrectLabel.setText(String(format: "%d", incorrect))
            
            if incorrect > 0 {
                incorrectMultiply.setText(String(format: "Fine x %d", level))
                fineLabel.setText(String(format: "-%d", level * incorrect))
                incorrectMultiply.setTextColor(UIColor.redColor())
                fineLabel.setTextColor(UIColor.redColor())
            }
            
            totalLabel.setText(String(format: "%d", totalScore))
            
            self.setTitle("Close")
        }
        /*
        if let score = context as? GameScore {
            self.gameMode = score.gameMode
            self.delegate = score.sender as? GameSelectionViewController
            scoreLabel.setText(String(format: "%d", score.score))
            incorrectLabel.setText(String(format: "%d", score.incorrect))
            let total = score.score - (score.incorrect * score.level)
            totalLabel.setText(String(format: "%d", total))
        }
        */
    }
    
    override func willActivate() {
        // This method is called when watch view controller is about to be visible to user
        super.willActivate()
    }
    
    override func didDeactivate() {
        // This method is called when watch view controller is no longer visible
        super.didDeactivate()
    }
    @IBOutlet weak var summaryLabel: WKInterfaceLabel!
    @IBOutlet weak var totalScoreLabel: WKInterfaceLabel!
    
    
    @IBOutlet weak var scoreLabel: WKInterfaceLabel!
    @IBOutlet weak var incorrectLabel: WKInterfaceLabel!
    
    @IBOutlet weak var incorrectMultiply: WKInterfaceLabel!
    
    @IBOutlet weak var fineLabel: WKInterfaceLabel!
    @IBOutlet weak var totalLabel: WKInterfaceLabel!
    
    
    
    @IBAction func retryClick() {
        self.delegate?.retryDelegate(gameMode)
        //popController()
    }
    @IBAction func closeClick() {
        self.dismissController()
    }

}
